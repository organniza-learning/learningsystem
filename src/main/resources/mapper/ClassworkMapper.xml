<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningsystem.dao.ClassworkMapper">
  <resultMap id="BaseResultMap" type="com.learningsystem.pojo.Classwork">
    <id column="CK_ID" jdbcType="INTEGER" property="ckId" />
    <result column="CK_CALSS" jdbcType="VARCHAR" property="ckCalss" />
    <result column="G_IDENTIFYING" jdbcType="INTEGER" property="gIdentifying" />
    <result column="CK_WEEK" jdbcType="INTEGER" property="ckWeek" />
    <result column="CK_FILE" jdbcType="VARCHAR" property="ckFile" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CK_ID, CK_CALSS, G_IDENTIFYING, CK_WEEK, CK_FILE
  </sql>
  <select id="selectByExample" parameterType="com.learningsystem.pojo.ClassworkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classwork
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classwork
    where CK_ID = #{ckId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classwork
    where CK_ID = #{ckId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.learningsystem.pojo.ClassworkExample">
    delete from classwork
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.learningsystem.pojo.Classwork">
    insert into classwork (CK_ID, CK_CALSS, G_IDENTIFYING, 
      CK_WEEK, CK_FILE)
    values (#{ckId,jdbcType=INTEGER}, #{ckCalss,jdbcType=VARCHAR}, #{gIdentifying,jdbcType=INTEGER}, 
      #{ckWeek,jdbcType=INTEGER}, #{ckFile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.learningsystem.pojo.Classwork">
    insert into classwork
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ckId != null">
        CK_ID,
      </if>
      <if test="ckCalss != null">
        CK_CALSS,
      </if>
      <if test="gIdentifying != null">
        G_IDENTIFYING,
      </if>
      <if test="ckWeek != null">
        CK_WEEK,
      </if>
      <if test="ckFile != null">
        CK_FILE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ckId != null">
        #{ckId,jdbcType=INTEGER},
      </if>
      <if test="ckCalss != null">
        #{ckCalss,jdbcType=VARCHAR},
      </if>
      <if test="gIdentifying != null">
        #{gIdentifying,jdbcType=INTEGER},
      </if>
      <if test="ckWeek != null">
        #{ckWeek,jdbcType=INTEGER},
      </if>
      <if test="ckFile != null">
        #{ckFile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.learningsystem.pojo.ClassworkExample" resultType="java.lang.Long">
    select count(*) from classwork
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classwork
    <set>
      <if test="record.ckId != null">
        CK_ID = #{record.ckId,jdbcType=INTEGER},
      </if>
      <if test="record.ckCalss != null">
        CK_CALSS = #{record.ckCalss,jdbcType=VARCHAR},
      </if>
      <if test="record.gIdentifying != null">
        G_IDENTIFYING = #{record.gIdentifying,jdbcType=INTEGER},
      </if>
      <if test="record.ckWeek != null">
        CK_WEEK = #{record.ckWeek,jdbcType=INTEGER},
      </if>
      <if test="record.ckFile != null">
        CK_FILE = #{record.ckFile,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classwork
    set CK_ID = #{record.ckId,jdbcType=INTEGER},
      CK_CALSS = #{record.ckCalss,jdbcType=VARCHAR},
      G_IDENTIFYING = #{record.gIdentifying,jdbcType=INTEGER},
      CK_WEEK = #{record.ckWeek,jdbcType=INTEGER},
      CK_FILE = #{record.ckFile,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.learningsystem.pojo.Classwork">
    update classwork
    <set>
      <if test="ckCalss != null">
        CK_CALSS = #{ckCalss,jdbcType=VARCHAR},
      </if>
      <if test="gIdentifying != null">
        G_IDENTIFYING = #{gIdentifying,jdbcType=INTEGER},
      </if>
      <if test="ckWeek != null">
        CK_WEEK = #{ckWeek,jdbcType=INTEGER},
      </if>
      <if test="ckFile != null">
        CK_FILE = #{ckFile,jdbcType=VARCHAR},
      </if>
    </set>
    where CK_ID = #{ckId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learningsystem.pojo.Classwork">
    update classwork
    set CK_CALSS = #{ckCalss,jdbcType=VARCHAR},
      G_IDENTIFYING = #{gIdentifying,jdbcType=INTEGER},
      CK_WEEK = #{ckWeek,jdbcType=INTEGER},
      CK_FILE = #{ckFile,jdbcType=VARCHAR}
    where CK_ID = #{ckId,jdbcType=INTEGER}
  </update>
</mapper>