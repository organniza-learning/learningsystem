<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningsystem.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.learningsystem.pojo.Student">
        <id column="STU_ID" jdbcType="INTEGER" property="stuId" />
        <result column="TG_OPENID" jdbcType="VARCHAR" property="tgOpenid" />
        <result column="C_CLASSID" jdbcType="INTEGER" property="cClassid" />
        <result column="TG_IDENTIFYING" jdbcType="INTEGER" property="tgIdentifying" />
        <result column="STU_STUDENTID" jdbcType="VARCHAR" property="stuStudentid" />
        <result column="STU_PASSWORD" jdbcType="VARCHAR" property="stuPassword" />
        <result column="STU_NAME" jdbcType="VARCHAR" property="stuName" />
        <result column="STU_GENDER" jdbcType="VARCHAR" property="stuGender" />
        <result column="G_IDENTIFYING" jdbcType="INTEGER" property="gIdentifying" />
        <result column="STU_EMAIL" jdbcType="VARCHAR" property="stuEmail" />
        <result column="STU_PHONER" jdbcType="INTEGER" property="stuPhoner" />
        <result column="STU_QQ" jdbcType="INTEGER" property="stuQq" />
        <result column="STU_WECHAT" jdbcType="VARCHAR" property="stuWechat" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
    STU_ID, TG_OPENID, C_CLASSID, TG_IDENTIFYING, STU_STUDENTID, STU_PASSWORD, STU_NAME, 
    STU_GENDER, G_IDENTIFYING, STU_EMAIL, STU_PHONER, STU_QQ, STU_WECHAT
  </sql>

    <!--insertStuInfo 插入用户数据-->
    <insert id="insertStuInfo" parameterType="com.learningsystem.pojo.Student">
        INSERT INTO `learningsystemdatabase`.`student` (
        `STU_STUDENTID`,
        `STU_NAME`,
        `STU_GENDER`,
        `G_IDENTIFYING`,
        `STU_EMAIL`,
        `STU_PHONER`,
        `STU_QQ`,
        `STU_WECHAT`
        )
        VALUES
            (
              #{stuStudentid},#{stuName},#{stuGender},#{stuEmail},#{stuPhoner},#{stuQq},#{stuWechat},#{},#{},#{},#{},#{}
            );
    </insert>
  
  <!-- 验证账号密码 -->
   <select id="selectByIdAndPassword" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where STU_STUDENTID = #{id} AND STU_PASSWORD =#{password}
  </select>
  
  <!-- 根据openid查询 -->
   <select id="selectByTgOpenid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where TG_OPENID = #{openid}
  </select>

    <select id="selectByExample" parameterType="com.learningsystem.pojo.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where STU_ID = #{stuId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from student
        where STU_ID = #{stuId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.learningsystem.pojo.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.learningsystem.pojo.Student">
        insert into student (STU_ID, TG_OPENID, C_CLASSID,
        TG_IDENTIFYING, STU_STUDENTID, STU_PASSWORD,
        STU_NAME, STU_GENDER, G_IDENTIFYING,
        STU_EMAIL, STU_PHONER, STU_QQ,
        STU_WECHAT)
        values (#{stuId,jdbcType=INTEGER}, #{tgOpenid,jdbcType=VARCHAR}, #{cClassid,jdbcType=INTEGER},
        #{tgIdentifying,jdbcType=INTEGER}, #{stuStudentid,jdbcType=VARCHAR}, #{stuPassword,jdbcType=VARCHAR},
        #{stuName,jdbcType=VARCHAR}, #{stuGender,jdbcType=VARCHAR}, #{gIdentifying,jdbcType=INTEGER},
        #{stuEmail,jdbcType=VARCHAR}, #{stuPhoner,jdbcType=INTEGER}, #{stuQq,jdbcType=INTEGER},
        #{stuWechat,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.learningsystem.pojo.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null">
                STU_ID,
            </if>
            <if test="tgOpenid != null">
                TG_OPENID,
            </if>
            <if test="cClassid != null">
                C_CLASSID,
            </if>
            <if test="tgIdentifying != null">
                TG_IDENTIFYING,
            </if>
            <if test="stuStudentid != null">
                STU_STUDENTID,
            </if>
            <if test="stuPassword != null">
                STU_PASSWORD,
            </if>
            <if test="stuName != null">
                STU_NAME,
            </if>
            <if test="stuGender != null">
                STU_GENDER,
            </if>
            <if test="gIdentifying != null">
                G_IDENTIFYING,
            </if>
            <if test="stuEmail != null">
                STU_EMAIL,
            </if>
            <if test="stuPhoner != null">
                STU_PHONER,
            </if>
            <if test="stuQq != null">
                STU_QQ,
            </if>
            <if test="stuWechat != null">
                STU_WECHAT,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null">
                #{stuId,jdbcType=INTEGER},
            </if>
            <if test="tgOpenid != null">
                #{tgOpenid,jdbcType=VARCHAR},
            </if>
            <if test="cClassid != null">
                #{cClassid,jdbcType=INTEGER},
            </if>
            <if test="tgIdentifying != null">
                #{tgIdentifying,jdbcType=INTEGER},
            </if>
            <if test="stuStudentid != null">
                #{stuStudentid,jdbcType=VARCHAR},
            </if>
            <if test="stuPassword != null">
                #{stuPassword,jdbcType=VARCHAR},
            </if>
            <if test="stuName != null">
                #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuGender != null">
                #{stuGender,jdbcType=VARCHAR},
            </if>
            <if test="gIdentifying != null">
                #{gIdentifying,jdbcType=INTEGER},
            </if>
            <if test="stuEmail != null">
                #{stuEmail,jdbcType=VARCHAR},
            </if>
            <if test="stuPhoner != null">
                #{stuPhoner,jdbcType=INTEGER},
            </if>
            <if test="stuQq != null">
                #{stuQq,jdbcType=INTEGER},
            </if>
            <if test="stuWechat != null">
                #{stuWechat,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.learningsystem.pojo.StudentExample" resultType="java.lang.Long">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.stuId != null">
                STU_ID = #{record.stuId,jdbcType=INTEGER},
            </if>
            <if test="record.tgOpenid != null">
                TG_OPENID = #{record.tgOpenid,jdbcType=VARCHAR},
            </if>
            <if test="record.cClassid != null">
                C_CLASSID = #{record.cClassid,jdbcType=INTEGER},
            </if>
            <if test="record.tgIdentifying != null">
                TG_IDENTIFYING = #{record.tgIdentifying,jdbcType=INTEGER},
            </if>
            <if test="record.stuStudentid != null">
                STU_STUDENTID = #{record.stuStudentid,jdbcType=VARCHAR},
            </if>
            <if test="record.stuPassword != null">
                STU_PASSWORD = #{record.stuPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.stuName != null">
                STU_NAME = #{record.stuName,jdbcType=VARCHAR},
            </if>
            <if test="record.stuGender != null">
                STU_GENDER = #{record.stuGender,jdbcType=VARCHAR},
            </if>
            <if test="record.gIdentifying != null">
                G_IDENTIFYING = #{record.gIdentifying,jdbcType=INTEGER},
            </if>
            <if test="record.stuEmail != null">
                STU_EMAIL = #{record.stuEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.stuPhoner != null">
                STU_PHONER = #{record.stuPhoner,jdbcType=INTEGER},
            </if>
            <if test="record.stuQq != null">
                STU_QQ = #{record.stuQq,jdbcType=INTEGER},
            </if>
            <if test="record.stuWechat != null">
                STU_WECHAT = #{record.stuWechat,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set STU_ID = #{record.stuId,jdbcType=INTEGER},
        TG_OPENID = #{record.tgOpenid,jdbcType=VARCHAR},
        C_CLASSID = #{record.cClassid,jdbcType=INTEGER},
        TG_IDENTIFYING = #{record.tgIdentifying,jdbcType=INTEGER},
        STU_STUDENTID = #{record.stuStudentid,jdbcType=VARCHAR},
        STU_PASSWORD = #{record.stuPassword,jdbcType=VARCHAR},
        STU_NAME = #{record.stuName,jdbcType=VARCHAR},
        STU_GENDER = #{record.stuGender,jdbcType=VARCHAR},
        G_IDENTIFYING = #{record.gIdentifying,jdbcType=INTEGER},
        STU_EMAIL = #{record.stuEmail,jdbcType=VARCHAR},
        STU_PHONER = #{record.stuPhoner,jdbcType=INTEGER},
        STU_QQ = #{record.stuQq,jdbcType=INTEGER},
        STU_WECHAT = #{record.stuWechat,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.learningsystem.pojo.Student">
        update student
        <set>
            <if test="tgOpenid != null">
                TG_OPENID = #{tgOpenid,jdbcType=VARCHAR},
            </if>
            <if test="cClassid != null">
                C_CLASSID = #{cClassid,jdbcType=INTEGER},
            </if>
            <if test="tgIdentifying != null">
                TG_IDENTIFYING = #{tgIdentifying,jdbcType=INTEGER},
            </if>
            <if test="stuStudentid != null">
                STU_STUDENTID = #{stuStudentid,jdbcType=VARCHAR},
            </if>
            <if test="stuPassword != null">
                STU_PASSWORD = #{stuPassword,jdbcType=VARCHAR},
            </if>
            <if test="stuName != null">
                STU_NAME = #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuGender != null">
                STU_GENDER = #{stuGender,jdbcType=VARCHAR},
            </if>
            <if test="gIdentifying != null">
                G_IDENTIFYING = #{gIdentifying,jdbcType=INTEGER},
            </if>
            <if test="stuEmail != null">
                STU_EMAIL = #{stuEmail,jdbcType=VARCHAR},
            </if>
            <if test="stuPhoner != null">
                STU_PHONER = #{stuPhoner,jdbcType=INTEGER},
            </if>
            <if test="stuQq != null">
                STU_QQ = #{stuQq,jdbcType=INTEGER},
            </if>
            <if test="stuWechat != null">
                STU_WECHAT = #{stuWechat,jdbcType=VARCHAR},
            </if>
        </set>
        where STU_ID = #{stuId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.learningsystem.pojo.Student">
        update student
        set TG_OPENID = #{tgOpenid,jdbcType=VARCHAR},
        C_CLASSID = #{cClassid,jdbcType=INTEGER},
        TG_IDENTIFYING = #{tgIdentifying,jdbcType=INTEGER},
        STU_STUDENTID = #{stuStudentid,jdbcType=VARCHAR},
        STU_PASSWORD = #{stuPassword,jdbcType=VARCHAR},
        STU_NAME = #{stuName,jdbcType=VARCHAR},
        STU_GENDER = #{stuGender,jdbcType=VARCHAR},
        G_IDENTIFYING = #{gIdentifying,jdbcType=INTEGER},
        STU_EMAIL = #{stuEmail,jdbcType=VARCHAR},
        STU_PHONER = #{stuPhoner,jdbcType=INTEGER},
        STU_QQ = #{stuQq,jdbcType=INTEGER},
        STU_WECHAT = #{stuWechat,jdbcType=VARCHAR}
        where STU_ID = #{stuId,jdbcType=INTEGER}
    </update>
</mapper>